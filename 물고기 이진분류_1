#이진 분류를 하기 전 데이터를 넣고 plt를 이용하여 그래프로 그려보는 코드
#주의! length와 weight의 인덱스 크기가 같아야 오류 없이 실행 된다.

import matplotlib.pyplot as plt #mathplotlub의 pylot함수를 plt로 줄여서 사용.
from sklearn.neighbors import KNeighborsClassifier
kn=KNeighborsClassifier()

bream_length=[25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, 31.5, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, 35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0,41.0]
bream_weight=[242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 500.0, 340.0, 500.0, 500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, 700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0,920.0]

smelt_length=[9.8,10.5,10.6,11.0,11.2,11.3,11.8,11.8,12.0,12.2,12.4,13.0,14.3,15.0]
smelt_weight=[6.7,7.5,7.0,9.7,9.8,8.7,10.0,9.9,9.8,12.2,13.4,12.2,19.7,19.9]

plt.scatter(smelt_length,smelt_weight) # plt.plot(smelt_lenth,smelt_weight,'bo')와 같다.
plt.scatter(bream_length,bream_weight)
plt.ylabel('length')
plt.xlabel('weight')
plt.show()

lenght=bream_length+smelt_length#두개의 lenght를 합쳐줌
weight=bream_weight+smelt_weight

fish_data=[[l,w]for l,w in zip(lenght,weight)]#fishdata에 lenght와 weight를 넣어주는데 짝짓고 넣어주기위해 zip을 사용해준다.
fish_target=[1]*35+[0]*14

kn.fit(fish_data,fish_target) #학습
kn.score(fish_data,fish_target) #평가
