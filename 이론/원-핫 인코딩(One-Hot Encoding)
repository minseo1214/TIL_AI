원-핫 인코딩은 선탣해야한 선택지의 개수만큼의 차원을 가지면서, 각 선택지의 인덱스에 해당하는 원소에서는 1, 나어지원소는 0의 값을 가지도록 표현하는 방법입니다.
예를 들어 세가지 선택지인 강아지, 고양이, 아이가 있다고 할 때 임의로 강아지는 0번 인덱스 고양이는 1번인덱스 아이는 2번 인덱스를 부여했다고 해봅시다.
이때 원-핫 인코딩이 된 벡터는 다음과 같습니다.
강아지 = [1, 0, 0]
고양이 = [0, 1, 0]
아이   = [0, 0, 1]

총 선택지는 3개였으므로 위 벡터들은 전부 3차원의 벡터가 되었습니다.
그리고 각 선택지의 벡터들을 보면 해당 선택지의 인덱스에만 1의 값을 가지고, 나머지 원소들은 0의 값을 가집니다.
예를 들어 고양이는 1번 인덱스였으므로 원-핫 인코딩으로 얻은 벡터에서 1번 인덱스만 1의 값을 가지는 것을 볼 수 있습니다.

이와 같이 원-핫 인코딩으로 표현된 벡터를 원-핫 벡터(one-hot vector)라고 합니다.

원-핫 벡터의 무작위 성

꼭 실제값을 원-핫 벡터로 표현해야만 다중 클래스 분류 문제를 풀 수 있는 것은 아니지만, 대부분의 다중 클래스 분류 문제가 각 클래스 간의 관계가 균등하다는 점에서 원-핫 벡터는 이러한  점을 표현 할 수 있는 적정한 표현 방법입니다.

다수의 클래스를 분류하는 문제에서는 이진 분류처럼 2개의 숫자 레이블이 아니라 클래스의 개수만큼 숫자 레이블이 필요합나다.
이때 직관적으로 생각해볼 수 있는 레이블링 방법은 불류해야할 클래스 전체에 정수 인코딩을 하는 겁니다.
분류해야 할 레이블이 {red, green, blue}와 같이 3개라면 각각 0, 1, 2로 레이블을 합니다.
또는 분류해야 할 클래스가 4개고 인덱스를 숫자 1부터 시작하고 싶다고 하면 {baby, child, adolescent, adult}라면 1, 2, 3, 4로 레이블을 해볼 수 있습니다
그런데 일반적인 다중 클래스 분류 문제에서 레이블링 방법으로는 위와 같은 정수 인코딩이 아니라 원-핫 인코딩을 사용하는 것이 보다 클래스의 성질을 잘 표현 했다고 할 수 있습니다.

Banana, Tomato, Apple라는 3개의 클래스가 존재하는 문제가 있다고 해봅시다.
레이블은 정수 인코딩을 사용하여 각각 1, 2, 3을 부여하였습니다.
손실 함수로 선형 회귀 챕터에서 배운 평균 제곱 오차 MSE를 사용하면 정수 인코딩이 어떤 오해를 불러일으킬 수 있는지 확인할 수 있습니다. 
아래의 식은 앞서 선형 회귀에서 배웠던 MSE를 다시 그대로 가져온 것입니다. 
y_hat는 예측값을 의미합니다

